?FOR DOTS. Параметр входящий Н


Основной появления 


- Если идет имплементация двух интерфейсов в классе с одинаковым методом, даже дэфолтными. ТО для класса будет сказано что он абстракный.

Stream - не имеют никакого отношения к структурам данных! 
Более мощные, быстрые и эффективные чем списки
Созданы для того чтобы можно было пользоваться Лямбдами.
Могут быть выведен как массивы или списки.
Бывают стримы - паралельные.

ВСЕ промежуточные методы выполняются только тогда когда выполняется терминальный метод.
Промежуточные:
 map,filter,distinct,sorted,peek,limit,parallel
Терминальные
foreach, toarray, reduce, collect(Collectors.toList()*or toSet()*), min,max,count,anymatch,allmatch,noneMatch,findFirst (and for parallel FindAny),iterator
Short-Circuit Methods
AnyMatch,AllMatch,noneMatch, findFirst, findany, limit


Основные используемые функциональные интерфейсы:

Predicate
значит что метод на выходе возвращает тру или фалс

Supplier<T> 
 у интерфейса есть один абстрактный метод get()
 
Function<T,R>
на входе Т на выходе Р

Consumer<T> - антипод supplier
Accept. Например system.out.prinln(T); Оно съело и ничено не возвращает. просто выводит где то там чтото там...
 
 
UnnaryOperator
Apply . возращает значение такое же как и на входе


....

BiFunction<T,U,R>
на входе Т,U на выходе Р

BinnaryOperator
На входе Т, Т и т.д. Одного типа